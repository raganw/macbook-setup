- name: Install asdf
  community.general.homebrew:
    name: asdf
    state: present
  tags: install, asdf

- name: Install asdf plugins
  ansible.builtin.shell: >-
    . $(brew --prefix asdf)/asdf.sh &&
    asdf plugin-add {{ item.name }} {{ item.repository | default() }}
  args:
    creates: "{{ asdf_dir }}/plugins/{{ item.name }}"
    chdir: "{{ asdf_home }}"
  with_items: "{{ asdf_plugins }}"
  tags: install, asdf

- name: Install asdf packages
  ansible.builtin.shell: >-
    . $(brew --prefix asdf)/asdf.sh &&
    asdf install {{ item.0.name }} {{ item.1 }}
  args:
    creates: "{{ asdf_dir }}/installs/{{ item.0.name }}/{{ item.1 }}"
    chdir: "{{ asdf_home }}"
  with_subelements:
    - "{{ asdf_plugins }}"
    - versions
    - flags:
      skip_missing: true
  tags: install, asdf

- name: Get current asdf package versions
  ansible.builtin.shell: >-
    set -o pipefail &&
    . $(brew --prefix asdf)/asdf.sh &&
    asdf current {{ item.name }} |
    grep -o '{{ item.global | default(item.versions[0]) }}'
  args:
    executable: "{{ asdf_install_shell | default(omit) }}"
    chdir: "{{ asdf_home }}"
  register: asdf_plugins_versions
  with_items: "{{ asdf_plugins }}"
  when: item.versions is defined
  changed_when: false
  failed_when: false
  tags: install, asdf

- name: Set global asdf package versions
  ansible.builtin.shell: >-
    . $(brew --prefix asdf)/asdf.sh &&
    asdf global {{ item.item.name }} {{ item.item.global | default(item.item.versions[0]) }}
  args:
    chdir: "{{ asdf_home }}"
  when: item.skipped is not defined and item.rc != 0
  with_items: "{{ asdf_plugins_versions.results }}"
  tags: install, asdf
